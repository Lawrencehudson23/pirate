{"version":3,"sources":["components/LogoutButton.js","components/DeleteButton.js","components/PirateList.js","components/Form.js","views/NewPirate.js","views/DetailPirate.js","components/RegistrationForm.js","views/Login.js","App.js","serviceWorker.js","index.js"],"names":["LogoutButton","Button","onClick","event","axios","delete","withCredentials","then","navigate","catch","err","console","error","DeleteButton","pirateId","successCallback","variant","log","message","PirateList","useState","pirates","setPirates","useEffect","get","res","data","Spinner","animation","role","className","map","pirate","key","_id","src","imageUrl","alt","pirateName","width","to","filter","id","Form","initialState","method","url","formState","setFormState","errors","setErrors","handleChange","target","name","value","onSubmit","preventDefault","response","newErrors","innerErrors","push","i","Alert","Heading","type","onChange","numOfTreasureChests","pirateCatchPhrase","checked","isPegLeg","NewPirate","crewPosition","idEyePatch","isHookHan","DetailPirate","setPirate","RegistrationForm","firstName","lastName","email","password","confirmPassword","post","Login","setEmail","setPassword","setErr","App","Navbar","bg","Brand","href","Nav","Link","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.faddb9b3.chunk.js","sourcesContent":["import React from 'react'\nimport axios from \"axios\";\nimport { navigate } from '@reach/router';\nimport {Button} from 'react-bootstrap';\n\nexport default function LogoutButton() {\n    function handleClick(event){\n        axios\n          .delete(\"http://localhost:5000/api/users/logout\",\n          { withCredentials:true })\n          .then(() => navigate('/'))\n          .catch(err => console.error(err));\n    }\n    return (\n        <div>\n            <Button onClick={handleClick}>Log Out</Button>\n        </div>\n    )\n}\n","import React from 'react'\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nexport default function DeleteButton({pirateId,successCallback}) {\n    function handleDelete(event){\n        axios\n          .delete(\"http://localhost:5000/api/pirates/\"+pirateId)\n          .then(() => {successCallback()})\n          .catch(err => console.log({message:\"cant deleteðŸ˜¡\",error:err}));\n    }\n    return (\n        <Button variant=\"danger\" onClick={handleDelete}>Delete</Button>\n       \n    )\n}\n","import React,{useEffect,useState} from 'react'\nimport axios from \"axios\";\nimport {Link, navigate} from \"@reach/router\";\nimport LogoutButton from './LogoutButton';\nimport DeleteButton from './DeleteButton';\nimport  Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\n\nexport default function PirateList() {\n    const [pirates, setPirates] = useState(null)\n    useEffect(() => {\n        axios\n          .get(\"http://localhost:5000/api/pirates\",{\n              withCredentials:true\n          })\n        //   .then(res=>console.log(res))\n          .then(res => setPirates(res.data))\n          .catch(err => {\n            console.log(err);\n            navigate('/')\n          });\n    }, [pirates])\n\n    function removeFromDom(pirateId) {\n        setPirates(pirates.filter(pirate => pirate.id !== pirateId))\n    }\n\n    return pirates ==null ?  (\n    <Spinner animation=\"border\" role=\"status\">\n\n        <span className=\"sr-only\">Loading...</span>\n     </Spinner>\n  ) : (<div>\n        <table>\n            <thead>\n                <tr>\n                    <th>\n                       Url \n                    </th>\n                    <th>\n                       Pirate \n                    </th>\n                    <th>\n                       Actions available \n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                {pirates.map((pirate)=>(\n                    <tr key={pirate._id}>\n                        <td>\n                            <img src={pirate.imageUrl} alt={pirate.pirateName} width=\"100\"/>\n\n                        </td>\n                        <td>\n                                <strong>{pirate.pirateName}</strong>\n                        </td>\n                        <td>\n                            <Link to={\"/pirates/\" + pirate._id}>\n                            <Button variant=\"primary\">View Pirate</Button>\n                            </Link>\n                            {\" \"}\n                            <DeleteButton \n                            pirateId={pirate._id} \n                            successCallback={() => removeFromDom(pirate._id)}/>\n                        </td>\n\n                    </tr>\n                    ))}\n            </tbody>\n        </table>\n        <LogoutButton/>\n    </div>)\n}\n","import React,{ useState,useEffect} from 'react'\nimport axios from \"axios\";\nimport {navigate} from '@reach/router'\nimport {Alert} from 'react-bootstrap'\n\n\n\nexport default function Form({initialState,method,url}) {\n    const [formState, setFormState] = useState(initialState);\n    const [errors, setErrors] = useState([]);\n    useEffect(() => {\n        axios\n          .get(\"http://localhost:5000/api/pirates\",{\n              withCredentials:true\n          })\n        //   .then(res=>console.log(res))\n          .then(res => setFormState(res.data))\n          .catch(err => {\n            console.log(err);\n            navigate('/')\n          });\n    }, [])\n    function handleChange(event){\n        setFormState({\n            ...formState,\n            \n            [event.target.name]:event.target.value\n        })\n        console.log(formState)\n    }\n\n    function handleClick(event){\n        \n    }\n\n    function handleSubmit(event){\n        event.preventDefault();\n\n        setErrors([]);\n        console.log(\"submit result:\"+formState)\n        axios({\n            method,\n            url,\n            data:formState\n        },{withCredentials:true})\n        .then( response=>{\n            console.log(\"real res----->\"+ response);\n            navigate('/pirates/'+response.data._id)})\n        .catch(err=>{\n            console.log(\"real err here++>\" + err);\n            const newErrors = [];\n            const innerErrors = err.response.data.errors;\n            for(const key in innerErrors){\n                newErrors.push(innerErrors[key].message);\n                \n            }\n\n            setErrors(newErrors)\n        })\n    }\n    return (\n        <div>\n            <h1>Add Pirate</h1>\n            \n            <form onSubmit={handleSubmit}>\n        {errors.map((error,i) => (\n            <Alert variant=\"danger\">\n            <Alert.Heading key={i}>{error}</Alert.Heading>\n            </Alert>\n        ))}\n            <label>pirateName</label>\n            <input type=\"text\" name=\"pirateName\" value={formState.pirateName} onChange={handleChange}/>\n            <label>imageUrl</label>\n            <input type=\"text\" name=\"imageUrl\" value={formState.imageUrl} onChange={handleChange}/>\n\n            <label>crewPosition</label>\n            <select name=\"crewPosition\" onChange={handleChange}>\n                <option value=\"Gunner\">Gunner</option>\n                <option value=\"Captain\">Captain</option>\n                <option value=\"First Mate\">First Mate</option>\n                <option value=\"Quartermaster\">Quartermaster</option>\n                <option value=\"Sailing Master\">Sailing Master</option>\n                <option value=\"Boatswain\">Boatswain</option>\n                <option value=\"Powder Monkey\">Powder Monkey</option>\n            </select>\n            \n            <label>numOfTreasureChests</label>\n            <input type=\"number\" name=\"numOfTreasureChests\" value={formState.numOfTreasureChests} onChange={handleChange}/>\n            <label>pirateCatchPhrase</label>\n            <input type=\"text\" name=\"pirateCatchPhrase\" value={formState.pirateCatchPhrase} onChange={handleChange}/>\n            <label>\n            <input type=\"checkbox\" checked={formState.isPegLeg} onClick={handleClick}/> Peg Leg</label><br/>\n            <label>\n            <input type=\"checkbox\" checked/> Eye Patch</label><br/>\n            <label>\n            <input type=\"checkbox\" checked/> Hook Hand</label><br/>\n            <br/>\n            <button variant=\"primary\">Submit</button>\n          \n            </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport Form from '../components/Form'\n\nexport default function NewPirate() {\n    return (\n        <div>\n            <Form\n                initialState={{\n                    pirateName:\"\",\n                    imageUrl:\"\",\n                    crewPosition:\"\",\n                    numOfTreasureChests:\"\",\n                    pirateCatchPhrase:\"\",\n                    isPegLeg:true,\n                    idEyePatch:true,\n                    isHookHan:true\n                }}\n                method=\"post\"\n                url=\"http://localhost:5000/api/pirates/new\"\n\n            />\n        </div>\n    )\n}\n","import React,{useEffect,useState} from 'react'\nimport axios from \"axios\";\nimport DeleteButton from '../components/DeleteButton';\nimport { navigate } from '@reach/router';\nexport default function DetailPirate({id}) {\n    const [pirate, setPirate] = useState({})\n    useEffect(() => {\n        axios\n          .get(\"http://localhost:5000/api/pirates/\"+id,{\n            withCredentials:true\n        })\n          .then(res => {console.log(res);  setPirate(res.data)})\n          .catch(err => {\n              navigate('/')\n              console.error(err)},\n              );\n    }, [id])\n    return (\n        <div>\n            <h1>Pirate Details</h1>\n            \n            <h2>potion: {pirate.crewPosition}</h2>\n            <img src={pirate.imageUrl} alt={pirate.pirateName} width=\"200\"/>\n            <h2>crewPosition: {pirate.crewPosition}</h2>\n            <h2>numOfTreasureChests: {pirate.numOfTreasureChests}</h2>\n            <h2>pirateCatchPhrase: {pirate.pirateCatchPhrase}</h2>\n            <h2>Peg Leg: Yes <button>no</button></h2>\n            <h2>Eye Patch: Yes <button>no</button></h2>\n            <h2>Hook Hand: Yes <button>no</button></h2>\n            \n\n\n            <DeleteButton pirateId={pirate._id} successCallback={() => navigate('/pirates')}/>\n        </div>\n    )\n}\n","import React,{useState} from 'react'\nimport axios from \"axios\";\nimport { navigate } from '@reach/router';\nimport Alert from 'react-bootstrap/Alert';\n// import { Button } from 'react-bootstrap';\nexport default function RegistrationForm() {\n\n    const [formState, setFormState] = useState({\n        firstName:'',\n        lastName:'',\n        email:'',\n        password:'',\n        confirmPassword:'',\n    })\n    const [errors, setErrors] = useState([])\n    \n    function handleChange(event) {\n        const{name,value} = event.target;\n\n        setFormState({\n            ...formState,\n            [name]:value\n        })\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setErrors([]);\n        axios.post('http://localhost:5000/api/users',formState,{\n            withCredentials:true\n        })\n            .then(()=>navigate('/pirates'))\n            .catch(err=>{\n                console.log(\"real err here++>\" + err);\n                const innerErrors = err.response.data.errors;\n                const newErrors = [];\n                for(const key in innerErrors){\n                    newErrors.push(innerErrors[key].message);\n                    \n                }\n    \n                setErrors(newErrors)\n            })\n    }\n    return (\n       \n\n        <form onSubmit={handleSubmit}>\n            {errors &&(\n                <>\n                {errors.map((error,i) => (\n                <Alert variant=\"danger\">\n                <Alert.Heading key={i}>{error}</Alert.Heading>\n                {/* // <strong style={{color: \"red\" }} key={i}>{error}<br/>init</strong> */}\n                </Alert>\n                ))}\n                </>\n            )}\n            <div>\n                <label>First Name</label>\n                <input\n                name=\"firstName\"\n                value={formState.firstName}\n                onChange={handleChange}\n                />\n            </div>\n            <div>\n                <label>Last Name</label>\n                <input\n                name=\"lastName\"\n                value={formState.lastName}\n                onChange={handleChange}\n                />\n            </div>\n            <div>\n                <label>Email</label>\n                <input\n                name=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n                />\n            </div>\n            <div>\n                <label>Password</label>\n                <input\n                type=\"password\"\n                name=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n                />\n            </div>\n            <div>\n                <label>Confirm Password</label>\n                <input\n                type=\"password\"\n                name=\"confirmPassword\"\n                value={formState.confirmPassword}\n                onChange={handleChange}\n                />\n            </div>\n            <button>submit</button>\n        </form>\n        \n    )\n}\n","import React, {useState} from 'react'\nimport axios from \"axios\";\nimport {navigate} from '@reach/router';\nimport RegistrationForm from '../components/RegistrationForm';\nimport {Alert} from 'react-bootstrap'\n\nexport default function Login() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [err, setErr] = useState('');\n    \n    function handleSubmit(event) {\n        event.preventDefault();\n        \n        setErr('');\n\n        axios\n          .post(\"http://localhost:5000/api/users/login\", {\n              email,\n              password\n          },{ withCredentials:true })\n          .then(()=> navigate('/pirates'))\n          .catch(() =>{ \n            console.log('inside catch of login')  \n            setErr('Please check your credentials!')});\n    }\n    \n    return (\n        <>\n            {err &&(\n            <Alert variant=\"danger\">\n                <Alert.Heading>{err}</Alert.Heading>\n                \n            </Alert>)}\n            <h1>Login/Reg</h1>\n            {/* {err && (\n                <strong style={{color:'red'}}>{err}</strong>\n            )} */}\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Email</label>\n                    <input\n                        name=\"email\"\n                        value={email}\n                        onChange={(event) => setEmail(event.target.value)}\n                    />\n                </div>\n                <div>\n                    <label>Password</label>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n                </div>\n                <button>submit</button>\n            </form>\n            <RegistrationForm/>\n        </>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport {Link,Router} from \"@reach/router\"\nimport PirateList from './components/PirateList';\n\nimport NewPirate from './views/NewPirate';\nimport DetailPirate from './views/DetailPirate';\nimport Login from './views/Login';\nimport { Navbar, Nav} from 'react-bootstrap';\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Navbar bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"\">Lawrence</Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link><Link to=\"/pirates/new\">Add Pirate</Link></Nav.Link>\n      <Nav.Link><Link to=\"/pirates\">Crew Board</Link></Nav.Link>\n      <Nav.Link ><Link to=\"/\">Login</Link></Nav.Link>\n    </Nav>\n     \n  </Navbar>\n\n      \n      <Router>\n        <NewPirate path='/pirates/new'/>\n        <PirateList path='/pirates'/>\n        <DetailPirate path='/pirates/:id'/>\n        <Login path='/'/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}